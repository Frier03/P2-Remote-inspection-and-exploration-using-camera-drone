Pseudo-code flow when the user opens the frontend in the browser

[] a function call
"" = jumps

[user_opens_app]

"...user_opens_app"
[clientjs checks IF jwt is present "somewhere??", IF TRUE]
    // do nothing

[ELSE]
    [...ask_user_to_login]



"...ask_user_to_login"
[clientjs then asks user to login]
    [user enters credentials]
    [clientjs sends a POST /api/auth/login]
        [backend checks credentials, IF valid]
            [...login_success]
        [ELSE]
            [server sends 400 (UNAUTHORIZED)]
            [...ask_user_to_login]


"...login_success"
[server sends 200 response with jwt]
[clientjs stores jwt "cookies? memory? somehow?"]






OPTIONS to store a jwt token:

localStorage (BAD)
sessionSotrage (IDK)
cookies (APPARENTLY BAD)
in-memory (GOOD, but how???)
